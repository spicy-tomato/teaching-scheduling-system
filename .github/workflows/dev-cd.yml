name: Dev CD

on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']

env:
  ENV_FILE: ./apps/teaching-scheduling-system/src/environments/environment.ts

jobs:
  build:
    name: Build Dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Create env file
        run: |
          touch $ENV_FILE
          echo "import p from '../../../../package.json';" >> $ENV_FILE
          echo "export const environment = {" >> $ENV_FILE
          echo "  version: p.version," >> $ENV_FILE
          echo "  production: false," >> $ENV_FILE
          echo "  recaptcha: {" >> $ENV_FILE
          echo "    siteKey: '${{ secrets.RECAPTCHA_SITE_KEY }}'," >> $ENV_FILE
          echo "  }," >> $ENV_FILE
          echo "  pusher: {" >> $ENV_FILE
          echo "    key: '${{ secrets.PUSHER_KEY }}'," >> $ENV_FILE
          echo "    cluster: '${{ secrets.PUSHER_CLUSTER }}'," >> $ENV_FILE
          echo "  }," >> $ENV_FILE
          echo "  SYNCFUSION_LICENSE: '${{ secrets.SYNCFUSION_LICENSE }}'," >> $ENV_FILE
          echo "};" >> $ENV_FILE

      - name: Build
        run: npm run build:dev

      - name: Copy dist to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: './dist/apps/teaching-scheduling-system/*,!./dist/apps/teaching-scheduling-system/assets/settings'
          target: '/var/www/html/webdev'
          strip_components: 3
